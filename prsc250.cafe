-- init
open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
  red inv250(init,p1,p,q,r,n) .
close

-- fkm11(all true)
open INV .
  :id(nslpk1)
	op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher1 .
	op s : -> System .
	eq (r3 \in cenc1(nw(s))) = true .
	red inv250(s,p1,p,q,r,n) implies inv250(fkm11(s,r1,r2,r3),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
	op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher1 .
	op s : -> System .
	eq (r3 \in cenc1(nw(s))) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(fkm11(s,r1,r2,r3),p1,p,q,r,n) .
close

-- fkm12(all true)
open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .	
    op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	red inv250(s,p1,p,q,r,n) implies inv250(fkm12(s,r1,r2,r3),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .	
    op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(fkm12(s,r1,r2,r3),p1,p,q,r,n) .
close

-- fkm21(all true)
open INV .
  :id(nslpk1)
	op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .	
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher2 .
	op s : -> System .
	eq (r3 \in cenc2(nw(s))) = true .
    eq enc2(p1,n,n(q,p,r),q) = r3 .
	red inv250(s,p1,p,q,r,n) implies inv250(fkm21(s,r1,r2,r3),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
	op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .	
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher2 .
	op s : -> System .
	eq (r3 \in cenc2(nw(s))) = true .
    eq (enc2(p1,n,n(q,p,r),q) = r3) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(fkm21(s,r1,r2,r3),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
	op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .	
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher2 .
	op s : -> System .
	eq (r3 \in cenc2(nw(s))) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(fkm21(s,r1,r2,r3),p1,p,q,r,n) .
close

-- fkm22(all true)
open INV .
  :id(nslpk1)
	op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .

    eq r4 = n(q,p,r) .
	eq n(q,p,r) \in cnonce(nw(s)) = true .
	eq r2 = p1 .
    eq n = r3 .
    eq r1 = q .
  
    eq (q = intruder) = true .
	red inv250(s,p1,p,q,r,n) implies inv250(fkm22(s,r1,r2,r3,r4),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
	op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .

    eq r4 = n(q,p,r) .
	eq n(q,p,r) \in cnonce(nw(s)) = true .
	eq r2 = p1 .
    eq n = r3 .
    eq r1 = q .
  
    eq (q = intruder) = false .
    eq r \in ur(s) = true .
	red inv250(s,p1,p,q,r,n) implies inv250(fkm22(s,r1,r2,r3,r4),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
	op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .

    eq r4 = n(q,p,r) .
	eq n(q,p,r) \in cnonce(nw(s)) = true .
	eq r2 = p1 .
    eq n = r3 .
    eq r1 = q .

    eq (q = intruder) = false .
    eq r \in ur(s) = false .
	red inv210(s,q,p,r) implies inv250(s,p1,p,q,r,n) implies inv250(fkm22(s,r1,r2,r3,r4),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
	op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .

    eq r4 = n(q,p,r) .
	eq n(q,p,r) \in cnonce(nw(s)) = true . 
    eq r2 = p1 .
    eq n = r3 .
    eq (r1 = q) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(fkm22(s,r1,r2,r3,r4),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
	op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .

    eq r4 = n(q,p,r) .
	eq n(q,p,r) \in cnonce(nw(s)) = true . 
    eq r2 = p1 .
    eq (n = r3) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(fkm22(s,r1,r2,r3,r4),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
	op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .

    eq r4 = n(q,p,r) .
	eq n(q,p,r) \in cnonce(nw(s)) = true . 
	eq (r2 = p1) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(fkm22(s,r1,r2,r3,r4),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
	op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .

    eq r4 = n(q,p,r) .
	eq n(q,p,r) \in cnonce(nw(s)) = false . 
	red inv250(s,p1,p,q,r,n) implies inv250(fkm22(s,r1,r2,r3,r4),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
	op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .

    eq (r4 = n(q,p,r)) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(fkm22(s,r1,r2,r3,r4),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
	op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
    eq r4 \in cnonce(nw(s)) = false . 
	red inv250(s,p1,p,q,r,n) implies inv250(fkm22(s,r1,r2,r3,r4),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
	op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(fkm22(s,r1,r2,r3,r4),p1,p,q,r,n) .
close

-- fkm31(all true)
open INV .
  :id(nslpk1)
  	op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher3 .
	op s : -> System .
	eq r3 \in cenc3(nw(s)) = true .
	red inv250(s,p1,p,q,r,n) implies inv250(fkm31(s,r1,r2,r3),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
  	op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher3 .
	op s : -> System .
	eq r3 \in cenc3(nw(s)) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(fkm31(s,r1,r2,r3),p1,p,q,r,n) .
close

-- fkm32(all true)
open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	red inv250(s,p1,p,q,r,n) implies inv250(fkm32(s,r1,r2,r3),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(fkm32(s,r1,r2,r3),p1,p,q,r,n) .
close

-- sdm1(all true)
open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Random .
	op s : -> System .
	eq (r3 \in ur(s)) = true .
	red inv250(s,p1,p,q,r,n) implies inv250(sdm1(s,r1,r2,r3),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Random .
	op s : -> System .
	eq (r3 \in ur(s)) = false .
    eq r = r3 .
	red inv250(s,p1,p,q,r,n) implies inv250(sdm1(s,r1,r2,r3),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Random .
	op s : -> System .
	eq (r3 \in ur(s)) = false .
    eq (r = r3) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(sdm1(s,r1,r2,r3),p1,p,q,r,n) .
close

-- sdm2(all true)
open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op s : -> System .
  eq r3 \in nw(s) = true .
  eq m1?(r3) = true .
  eq receiver(r3) = r1 .
  eq key(cipher1(r3)) = r1 .
  eq principal(cipher1(r3)) = sender(r3) .
  eq r2 \in ur(s) = true .

	red inv250(s,p1,p,q,r,n) implies inv250(sdm2(s,r1,r2,r3),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op s : -> System .
  eq r3 \in nw(s) = true .
  eq m1?(r3) = true .
  eq receiver(r3) = r1 .
  eq key(cipher1(r3)) = r1 .
  eq principal(cipher1(r3)) = sender(r3) .
  eq r2 \in ur(s) = false .
  eq r = r2 .
	red inv250(s,p1,p,q,r,n) implies inv250(sdm2(s,r1,r2,r3),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op s : -> System .
  eq r3 \in nw(s) = true .
  eq m1?(r3) = true .
  eq receiver(r3) = r1 .
  eq key(cipher1(r3)) = r1 .
  eq principal(cipher1(r3)) = sender(r3) .
  eq r2 \in ur(s) = false .
  eq (r = r2) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(sdm2(s,r1,r2,r3),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op s : -> System .
  eq r3 \in nw(s) = true .
  eq m1?(r3) = true .
  eq receiver(r3) = r1 .
  eq key(cipher1(r3)) = r1 .
  eq (principal(cipher1(r3)) = sender(r3)) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(sdm2(s,r1,r2,r3),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op s : -> System .
  eq r3 \in nw(s) = true .
  eq m1?(r3) = true .
  eq receiver(r3) = r1 .
  eq (key(cipher1(r3)) = r1) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(sdm2(s,r1,r2,r3),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op s : -> System .
  eq r3 \in nw(s) = true .
  eq m1?(r3) = true .
  eq (receiver(r3) = r1) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(sdm2(s,r1,r2,r3),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op s : -> System .
  eq r3 \in nw(s) = true .
  eq m1?(r3) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(sdm2(s,r1,r2,r3),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op s : -> System .
  eq r3 \in nw(s) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(sdm2(s,r1,r2,r3),p1,p,q,r,n) .
close

-- sdm3(all true)
open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq receiver(r4) = r1 .
	eq key(cipher2(r4)) = r1 .
    eq nonce1(cipher2(r4)) = n(r1,sender(r4),r2) .
	eq principal(cipher2(r4)) = sender(r4) .
	red inv250(s,p1,p,q,r,n) implies inv250(sdm3(s,r1,r2,r3,r4),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq receiver(r4) = r1 .
	eq key(cipher2(r4)) = r1 .
    eq nonce1(cipher2(r4)) = n(r1,sender(r4),r2) .
	eq (principal(cipher2(r4)) = sender(r4)) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(sdm3(s,r1,r2,r3,r4),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq receiver(r4) = r1 .
	eq key(cipher2(r4)) = r1 .
    eq (nonce1(cipher2(r4)) = n(r1,sender(r4),r2)) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(sdm3(s,r1,r2,r3,r4),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq receiver(r4) = r1 .
	eq (key(cipher2(r4)) = r1) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(sdm3(s,r1,r2,r3,r4),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq (receiver(r4) = r1) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(sdm3(s,r1,r2,r3,r4),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq (principal(cipher1(r3)) = r1) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(sdm3(s,r1,r2,r3,r4),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq (nonce(cipher1(r3)) = n(r1,sender(r4),r2)) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(sdm3(s,r1,r2,r3,r4),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq (key(cipher1(r3)) = sender(r4)) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(sdm3(s,r1,r2,r3,r4),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq (receiver(r3) = sender(r4)) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(sdm3(s,r1,r2,r3,r4),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq (sender(r3) = r1) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(sdm3(s,r1,r2,r3,r4),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
   op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq (creator(r3) = r1) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(sdm3(s,r1,r2,r3,r4),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(sdm3(s,r1,r2,r3,r4),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(sdm3(s,r1,r2,r3,r4),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(sdm3(s,r1,r2,r3,r4),p1,p,q,r,n) .
close

open INV .
  :id(nslpk1)
    op p1 : -> Principal .
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = false .
	red inv250(s,p1,p,q,r,n) implies inv250(sdm3(s,r1,r2,r3,r4),p1,p,q,r,n) .
close

open INV .
  :proof(nslpk1)
close