-- init
open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
  red inv190(init,p,q,r,n) .
close

-- fkm11(all true)
open INV .
  -- :id(nslpk1)
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher1 .
	op s : -> System .
	eq (r3 \in cenc1(nw(s))) = true .
	red inv190(s,p,q,r,n) implies inv190(fkm11(s,r1,r2,r3),p,q,r,n) .
close

open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher1 .
	op s : -> System .
	eq (r3 \in cenc1(nw(s))) = false .
	red inv190(s,p,q,r,n) implies inv190(fkm11(s,r1,r2,r3),p,q,r,n) .
close

-- fkm12(all true)
open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	red inv190(s,p,q,r,n) implies inv190(fkm12(s,r1,r2,r3),p,q,r,n) .
close

open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv190(s,p,q,r,n) implies inv190(fkm12(s,r1,r2,r3),p,q,r,n) .
close

-- fkm21(all true)
open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher2 .
	op s : -> System .
	eq (r3 \in cenc2(nw(s))) = true .
      eq enc2(p,n(p,q,r),n,q) = r3 .
	red inv190(s,p,q,r,n) implies inv190(fkm21(s,r1,r2,r3),p,q,r,n) .
close

open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher2 .
	op s : -> System .
	eq (r3 \in cenc2(nw(s))) = true .
      eq (enc2(p,n(p,q,r),n,q) = r3) = false .
	red inv190(s,p,q,r,n) implies inv190(fkm21(s,r1,r2,r3),p,q,r,n) .
close

open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher2 .
	op s : -> System .
	eq (r3 \in cenc2(nw(s))) = false .
	red inv190(s,p,q,r,n) implies inv190(fkm21(s,r1,r2,r3),p,q,r,n) .
close

-- fkm22(all true)
open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
    eq p = intruder .
	red inv190(s,p,q,r,n) implies inv190(fkm22(s,r1,r2,r3,r4),p,q,r,n) .
close

open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
    eq (p = intruder) = false .
    eq r \in ur(s) = true .
  	red inv190(s,p,q,r,n) implies inv190(fkm22(s,r1,r2,r3,r4),p,q,r,n) .
close

open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
    eq (p = intruder) = false .
    eq r \in ur(s) = false .
    eq n(p,q,r) = r3 .
  	red inv210(s,p,q,r) implies inv190(s,p,q,r,n) implies inv190(fkm22(s,r1,r2,r3,r4),p,q,r,n) .
close

open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
    eq (p = intruder) = false .
    eq r \in ur(s) = false .
    eq (n(p,q,r) = r3) = false .
    eq n(p,q,r) = r4 .
  	red inv210(s,p,q,r) implies inv190(s,p,q,r,n) implies inv190(fkm22(s,r1,r2,r3,r4),p,q,r,n) .
close

open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = true .
    eq (p = intruder) = false .
    eq r \in ur(s) = false .
    eq (n(p,q,r) = r3) = false .
    eq (n(p,q,r) = r4) = false .
  	red inv190(s,p,q,r,n) implies inv190(fkm22(s,r1,r2,r3,r4),p,q,r,n) .
close

open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	eq (r4 \in cnonce(nw(s))) = false .
	red inv190(s,p,q,r,n) implies inv190(fkm22(s,r1,r2,r3,r4),p,q,r,n) .
close

open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv190(s,p,q,r,n) implies inv190(fkm22(s,r1,r2,r3,r4),p,q,r,n) .
close

-- fkm31(all true)
open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher3 .
	op s : -> System .
	eq (r3 \in cenc3(nw(s))) = true .
	red inv190(s,p,q,r,n) implies inv190(fkm31(s,r1,r2,r3),p,q,r,n) .
close

open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher3 .
	op s : -> System .
	eq (r3 \in cenc3(nw(s))) = false .
	red inv190(s,p,q,r,n) implies inv190(fkm31(s,r1,r2,r3),p,q,r,n) .
close

-- fkm32(all true)
open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	red inv190(s,p,q,r,n) implies inv190(fkm32(s,r1,r2,r3),p,q,r,n) .
close

open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv190(s,p,q,r,n) implies inv190(fkm32(s,r1,r2,r3),p,q,r,n) .
close

-- sdm1(all true)
open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Random .
	op s : -> System .
	eq (r3 \in ur(s)) = true .
	red inv190(s,p,q,r,n) implies inv190(sdm1(s,r1,r2,r3),p,q,r,n) .
close

open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Random .
	op s : -> System .
	eq (r3 \in ur(s)) = false .
	red inv190(s,p,q,r,n) implies inv190(sdm1(s,r1,r2,r3),p,q,r,n) .
close

-- sdm2
--> true
open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op s : -> System .
  eq r3 \in nw(s) = true .
  eq m1?(r3) = true .
  eq receiver(r3) = r1 .
  eq key(cipher1(r3)) = r1 .
  eq principal(cipher1(r3)) = sender(r3) .
  eq r2 \in ur(s) = true .

	red inv190(s,p,q,r,n) implies inv190(sdm2(s,r1,r2,r3),p,q,r,n) .
close

--> true
open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op s : -> System .
  eq r3 \in nw(s) = true .
  eq m1?(r3) = true .
  eq receiver(r3) = r1 .
  eq key(cipher1(r3)) = r1 .
  eq principal(cipher1(r3)) = sender(r3) .
  eq r2 \in ur(s) = false .

   eq p = intruder .

	red inv190(s,p,q,r,n) implies inv190(sdm2(s,r1,r2,r3),p,q,r,n) .
close

open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op s : -> System .
  eq r3 \in nw(s) = true .
  eq m1?(r3) = true .
  eq receiver(r3) = r1 .
  eq key(cipher1(r3)) = r1 .
  eq principal(cipher1(r3)) = sender(r3) .
  eq r2 \in ur(s) = false .

  eq (p = intruder) = false .
  eq r = r2 .

	red inv190(s,p,q,r,n) implies inv190(sdm2(s,r1,r2,r3),p,q,r,n) .
close

open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op s : -> System .
  eq r3 \in nw(s) = true .
  eq m1?(r3) = true .
  eq receiver(r3) = r1 .
  eq key(cipher1(r3)) = r1 .
  eq principal(cipher1(r3)) = sender(r3) .
  eq r2 \in ur(s) = false .

  eq (p = intruder) = false .
  eq (r = r2) = false .
 
  eq sender(r3) = p .
  eq nonce(cipher1(r3)) = n(p,q,r) .
  eq n = n(r1,sender(r3),r2) .
  eq r1 = q .

    eq r \in ur(s) = true .

	red inv190(s,p,q,r,n) implies inv190(sdm2(s,r1,r2,r3),p,q,r,n) .
close

-- ntnf
open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op s : -> System .
  eq r3 \in nw(s) = true .
  eq m1?(r3) = true .
  eq receiver(r3) = r1 .
  eq key(cipher1(r3)) = r1 .
  eq principal(cipher1(r3)) = sender(r3) .
  eq r2 \in ur(s) = false .

  eq (p = intruder) = false .
  eq (r = r2) = false .
 
  eq sender(r3) = p .
  eq nonce(cipher1(r3)) = n(p,q,r) .
  eq n = n(r1,sender(r3),r2) .
  eq r1 = q .

  eq r \in ur(s) = false .
  eq q = intruder .
	red inv190(s,p,q,r,n) implies inv190(sdm2(s,r1,r2,r3),p,q,r,n) .
close

-- true
open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op s : -> System .
  eq r3 \in nw(s) = true .
  eq m1?(r3) = true .
  eq receiver(r3) = r1 .
  eq key(cipher1(r3)) = r1 .
  eq (principal(cipher1(r3)) = sender(r3)) = false .
	red inv190(s,p,q,r,n) implies inv190(sdm2(s,r1,r2,r3),p,q,r,n) .
close

open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op s : -> System .
  eq r3 \in nw(s) = true .
  eq m1?(r3) = true .
  eq receiver(r3) = r1 .
  eq (key(cipher1(r3)) = r1) = false .
	red inv190(s,p,q,r,n) implies inv190(sdm2(s,r1,r2,r3),p,q,r,n) .
close

open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op s : -> System .
  eq r3 \in nw(s) = true .
  eq m1?(r3) = true .
  eq (receiver(r3) = r1) = false .
	red inv190(s,p,q,r,n) implies inv190(sdm2(s,r1,r2,r3),p,q,r,n) .
close

open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op s : -> System .
  eq r3 \in nw(s) = true .
  eq m1?(r3) = false .
	red inv190(s,p,q,r,n) implies inv190(sdm2(s,r1,r2,r3),p,q,r,n) .
close

open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op s : -> System .
  eq r3 \in nw(s) = false .
	red inv190(s,p,q,r,n) implies inv190(sdm2(s,r1,r2,r3),p,q,r,n) .
close

-- sdm3(all true)
--> true
open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq receiver(r4) = r1 .
	eq key(cipher2(r4)) = r1 .
    eq nonce1(cipher2(r4)) = n(r1,sender(r4),r2) .
	eq principal(cipher2(r4)) = sender(r4) .
	red inv190(s,p,q,r,n) implies inv190(sdm3(s,r1,r2,r3,r4),p,q,r,n) .
close

open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq receiver(r4) = r1 .
	eq key(cipher2(r4)) = r1 .
    eq nonce1(cipher2(r4)) = n(r1,sender(r4),r2) .
	eq (principal(cipher2(r4)) = sender(r4)) = false .
	red inv190(s,p,q,r,n) implies inv190(sdm3(s,r1,r2,r3,r4),p,q,r,n) .
close

open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq receiver(r4) = r1 .
	eq key(cipher2(r4)) = r1 .
    eq (nonce1(cipher2(r4)) = n(r1,sender(r4),r2)) = false .
	red inv190(s,p,q,r,n) implies inv190(sdm3(s,r1,r2,r3,r4),p,q,r,n) .
close

open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq receiver(r4) = r1 .
	eq (key(cipher2(r4)) = r1) = false .
	red inv190(s,p,q,r,n) implies inv190(sdm3(s,r1,r2,r3,r4),p,q,r,n) .
close

open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq (receiver(r4) = r1) = false .
	red inv190(s,p,q,r,n) implies inv190(sdm3(s,r1,r2,r3,r4),p,q,r,n) .
close

open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq (principal(cipher1(r3)) = r1) = false .
	red inv190(s,p,q,r,n) implies inv190(sdm3(s,r1,r2,r3,r4),p,q,r,n) .
close

open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq (nonce(cipher1(r3)) = n(r1,sender(r4),r2)) = false .
	red inv190(s,p,q,r,n) implies inv190(sdm3(s,r1,r2,r3,r4),p,q,r,n) .
close

--> true
open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq (key(cipher1(r3)) = sender(r4)) = false .
	red inv190(s,p,q,r,n) implies inv190(sdm3(s,r1,r2,r3,r4),p,q,r,n) .
close

--> true
open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq (receiver(r3) = sender(r4)) = false .
	red inv190(s,p,q,r,n) implies inv190(sdm3(s,r1,r2,r3,r4),p,q,r,n) .
close

--> true
open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq (sender(r3) = r1) = false .
	red inv190(s,p,q,r,n) implies inv190(sdm3(s,r1,r2,r3,r4),p,q,r,n) .
close

--> true
open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq (creator(r3) = r1) = false .
	red inv190(s,p,q,r,n) implies inv190(sdm3(s,r1,r2,r3,r4),p,q,r,n) .
close

--> true
open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = false .
	red inv190(s,p,q,r,n) implies inv190(sdm3(s,r1,r2,r3,r4),p,q,r,n) .
close

--> true
open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = false .
	red inv190(s,p,q,r,n) implies inv190(sdm3(s,r1,r2,r3,r4),p,q,r,n) .
close

--> true
open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = false .
	red inv190(s,p,q,r,n) implies inv190(sdm3(s,r1,r2,r3,r4),p,q,r,n) .
close

--> true
open INV .
  -- :id(nslpk1)
	op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = false .
	red inv190(s,p,q,r,n) implies inv190(sdm3(s,r1,r2,r3,r4),p,q,r,n) .
close

-- open INV .
--   :proof(nslpk1)
-- close