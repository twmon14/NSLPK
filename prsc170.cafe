-- init
open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
  red inv170(init,p,q,q1,r,n) .
close

-- fkm11(all trrue)
open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher1 .
	op s : -> System .
	eq (r3 \in cenc1(nw(s))) = true .
    eq p = intruder .
	red inv170(s,p,q,q1,r,n) implies inv170(fkm11(s,r1,r2,r3),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher1 .
	op s : -> System .
	eq (r3 \in cenc1(nw(s))) = true .
    eq (p = intruder) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(fkm11(s,r1,r2,r3),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher1 .
	op s : -> System .
	eq (r3 \in cenc1(nw(s))) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(fkm11(s,r1,r2,r3),p,q,q1,r,n) .
close

-- fkm12(all true)
open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
    eq p = intruder .
	red inv170(s,p,q,q1,r,n) implies inv170(fkm12(s,r1,r2,r3),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
  	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
    eq (p = intruder) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(fkm12(s,r1,r2,r3),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(fkm12(s,r1,r2,r3),p,q,q1,r,n) .
close

-- fkm21
open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher2 .
	op s : -> System .
	eq enc2(p,n(p,q,r),n,q) \in cenc2(nw(s)) = true .
    eq p = intruder .
	red inv170(s,p,q,q1,r,n) implies inv170(fkm21(s,r1,r2,r3),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .  
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher2 .
	op s : -> System .
	eq enc2(p,n(p,q,r),n,q) \in cenc2(nw(s)) = true .
    eq (p = intruder) = false .

    eq m1(p,p,q,enc1(q,n(p,q,r),p)) \in nw(s) = true .

    eq q1 = intruder .
    eq intruder = q .
    eq r1 = q .
    eq r2 = p .
    eq r3 = enc2(p,n(p,q,r),n,q) .

    eq m2(q,q,p,enc2(p,n(p,q,r),n,q)) \in nw(s) = true .
    eq (m2(q,q,p,enc2(p,n(p,q,r),n,q)) = m2(intruder,q,p,enc2(p,n(p,q,r),n,q))) = true .
	red inv170(s,p,q,q1,r,n) implies inv170(fkm21(s,r1,r2,r3),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher2 .
	op s : -> System .
	eq enc2(p,n(p,q,r),n,q) \in cenc2(nw(s)) = true .
    eq (p = intruder) = false .

    eq m1(p,p,q,enc1(q,n(p,q,r),p)) \in nw(s) = true .

    eq q1 = intruder .
    eq intruder = q .
    eq r1 = q .
    eq r2 = p .
    eq r3 = enc2(p,n(p,q,r),n,q) .

    eq m2(q,q,p,enc2(p,n(p,q,r),n,q)) \in nw(s) = true .
    eq (m2(q,q,p,enc2(p,n(p,q,r),n,q)) = m2(intruder,q,p,enc2(p,n(p,q,r),n,q))) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(fkm21(s,r1,r2,r3),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher2 .
	op s : -> System .
	eq enc2(p,n(p,q,r),n,q) \in cenc2(nw(s)) = true .
    eq (p = intruder) = false .

    eq m1(p,p,q,enc1(q,n(p,q,r),p)) \in nw(s) = true .

    eq q1 = intruder .
    eq intruder = q .
    eq r1 = q .
    eq r2 = p .
    eq r3 = enc2(p,n(p,q,r),n,q) .

    eq m2(q,q,p,enc2(p,n(p,q,r),n,q)) \in nw(s) = false .
	eq (m2(q,q,p,enc2(p,n(p,q,r),n,q)) = m2(intruder,q,p,enc2(p,n(p,q,r),n,q))) = true .
	red inv170(s,p,q,q1,r,n) implies inv170(fkm21(s,r1,r2,r3),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher2 .
	op s : -> System .
	eq enc2(p,n(p,q,r),n,q) \in cenc2(nw(s)) = true .
    eq (p = intruder) = false .

    eq m1(p,p,q,enc1(q,n(p,q,r),p)) \in nw(s) = true .

    eq q1 = intruder .
    eq intruder = q .
    eq r1 = q .
    eq r2 = p .
    eq r3 = enc2(p,n(p,q,r),n,q) .

    eq m2(q,q,p,enc2(p,n(p,q,r),n,q)) \in nw(s) = false .
	eq (m2(q,q,p,enc2(p,n(p,q,r),n,q)) = m2(intruder,q,p,enc2(p,n(p,q,r),n,q))) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(fkm21(s,r1,r2,r3),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher2 .
	op s : -> System .
	eq enc2(p,n(p,q,r),n,q) \in cenc2(nw(s)) = true .
    eq (p = intruder) = false .

    eq m1(p,p,q,enc1(q,n(p,q,r),p)) \in nw(s) = true .

    eq q1 = intruder .
    eq intruder = q .

    eq r1 = q .
    eq r2 = p .
    eq (r3 = enc2(p,n(p,q,r),n,q)) = false .

	red inv170(s,p,q,q1,r,n) implies inv170(fkm21(s,r1,r2,r3),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
  	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher2 .
	op s : -> System .
	eq enc2(p,n(p,q,r),n,q) \in cenc2(nw(s)) = true .
    eq (p = intruder) = false .

    eq m1(p,p,q,enc1(q,n(p,q,r),p)) \in nw(s) = true .

    eq q1 = intruder .
    eq intruder = q .
    eq r1 = q .
    eq (r2 = p) = false .

	red inv170(s,p,q,q1,r,n) implies inv170(fkm21(s,r1,r2,r3),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
  	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher2 .
	op s : -> System .
	eq enc2(p,n(p,q,r),n,q) \in cenc2(nw(s)) = true .
    eq (p = intruder) = false .

    eq m1(p,p,q,enc1(q,n(p,q,r),p)) \in nw(s) = true .

    eq q1 = intruder .
    eq intruder = q .
    eq (r1 = q) = false .

	red inv170(s,p,q,q1,r,n) implies inv170(fkm21(s,r1,r2,r3),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher2 .
	op s : -> System .
	eq enc2(p,n(p,q,r),n,q) \in cenc2(nw(s)) = true .
    eq (p = intruder) = false .

    eq m1(p,p,q,enc1(q,n(p,q,r),p)) \in nw(s) = true .

    eq q1 = intruder .
    eq (intruder = q) = false .
 
    eq q = q1 .
	red inv170(s,p,q,q1,r,n) implies inv170(fkm21(s,r1,r2,r3),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher2 .
	op s : -> System .
	eq enc2(p,n(p,q,r),n,q) \in cenc2(nw(s)) = true .
    eq (p = intruder) = false .

    eq m1(p,p,q,enc1(q,n(p,q,r),p)) \in nw(s) = true .

    eq q1 = intruder .
    eq (intruder = q) = false .
 
    eq (q = q1) = false .
    eq q = intruder .
	red inv170(s,p,q,q1,r,n) implies inv170(fkm21(s,r1,r2,r3),p,q,q1,r,n) .
close

-- ntnf
open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher2 .
	op s : -> System .
	eq enc2(p,n(p,q,r),n,q) \in cenc2(nw(s)) = true .
    eq (p = intruder) = false .

    eq m1(p,p,q,enc1(q,n(p,q,r),p)) \in nw(s) = true .

    eq q1 = intruder .
    eq (intruder = q) = false .
 
    eq (q = q1) = false .
    eq (q = intruder) = false .

    red inv220(s,p,q,r,n)
    implies inv170(s,p,q,q1,r,n) implies inv170(fkm21(s,r1,r2,r3),p,q,q1,r,n) .
close

-- fkm22
open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	-- eq n(p,q,r) \in cnonce(nw(s)) = true .
	eq (r4 \in cnonce(nw(s))) = true .
    eq p = intruder .
	red inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	-- eq n(p,q,r) \in cnonce(nw(s)) = true .
	eq (r4 \in cnonce(nw(s))) = true .
    eq (p = intruder) = false .

    eq q = intruder .
    eq q1 = intruder .
    eq r1 = q .
    eq r2 = p .
    eq n(p,q,r) = r3 .
    eq r4 = n .

	red inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	-- eq n(p,q,r) \in cnonce(nw(s)) = true .
	eq (r4 \in cnonce(nw(s))) = true .
    eq (p = intruder) = false .

    eq q = intruder .
    eq q1 = intruder .
    eq r1 = q .
    eq r2 = p .
    eq n(p,q,r) = r3 .
    eq (r4 = n) = false .

	red inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	-- eq n(p,q,r) \in cnonce(nw(s)) = true .
	eq (r4 \in cnonce(nw(s))) = true .
    eq (p = intruder) = false .

    eq q = intruder .
    eq q1 = intruder .
    eq r1 = q .
    eq r2 = p .
    eq (n(p,q,r) = r3) = false .

	red inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	-- eq n(p,q,r) \in cnonce(nw(s)) = true .
	eq (r4 \in cnonce(nw(s))) = true .
    eq (p = intruder) = false .

    eq q = intruder .
    eq q1 = intruder .
    eq r1 = q .
    eq (r2 = p) = false .

	red inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	-- eq n(p,q,r) \in cnonce(nw(s)) = true .
	eq (r4 \in cnonce(nw(s))) = true .
    eq (p = intruder) = false .

    eq q = intruder .
    eq q1 = intruder .
    eq (r1 = q) = false .

	red inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	-- eq n(p,q,r) \in cnonce(nw(s)) = true .
	eq (r4 \in cnonce(nw(s))) = true .
    eq (p = intruder) = false .

    eq q = intruder .
    eq (q1 = intruder) = false .

	red inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	-- eq n(p,q,r) \in cnonce(nw(s)) = true .
	eq (r4 \in cnonce(nw(s))) = true .
    eq (p = intruder) = false .

    eq (q = intruder) = false .

    eq m2(q1,q,p,enc2(p,n(p,q,r),n,q))\in nw(s) = true .
	red inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

-- ntnf
open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	-- eq n(p,q,r) \in cnonce(nw(s)) = true .
	eq (r4 \in cnonce(nw(s))) = true .
    eq (p = intruder) = false .

    eq (q = intruder) = false .

    -- eq q1 = intruder .
    -- eq r1 = q .
    -- eq r2 = p .
    -- eq n(p,q,r) = r3 .
    -- eq r4 = n .
    
    eq m2(q1,q,p,enc2(p,n(p,q,r),n,q)) \in nw(s) = false .
    -- eq (m2(q1,q,p,enc2(p,n(p,q,r),n,q)) = m2(q,q,p,enc2(p,n(p,q,r),n,q))) = true .
	red inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

-- another approach for fkm22
open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	eq n(p,q,r) \in cnonce(nw(s)) = true .
	eq (r4 \in cnonce(nw(s))) = true .
    eq (p = intruder) = false .

    eq q1 = intruder .
    eq r1 = q .
    eq r2 = p .
    eq r3 = n(p,q,r) .
    eq r4 = n .

    eq q = intruder .
	red inv130(s,r3) implies inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	eq n(p,q,r) \in cnonce(nw(s)) = true .
	eq (r4 \in cnonce(nw(s))) = true .
    eq (p = intruder) = false .

    eq q1 = intruder .
    eq r1 = q .
    eq r2 = p .
    eq r3 = n(p,q,r) .
    eq r4 = n .

    eq (q = intruder) = false .
	red inv130(s,r3) implies inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	eq n(p,q,r) \in cnonce(nw(s)) = true .
	eq (r4 \in cnonce(nw(s))) = true .
    eq (p = intruder) = false .

    eq q1 = intruder .
    eq r1 = q .
    eq r2 = p .
    eq r3 = n(p,q,r) .
    eq (r4 = n) = false .

	red inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	eq n(p,q,r) \in cnonce(nw(s)) = true .
	eq (r4 \in cnonce(nw(s))) = true .
    eq (p = intruder) = false .

    eq q1 = intruder .
    eq r1 = q .
    eq r2 = p .
    eq (r3 = n(p,q,r)) = false .

    eq q = intruder .
	red inv130(s,n(p,q,r)) implies inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	eq n(p,q,r) \in cnonce(nw(s)) = true .
	eq (r4 \in cnonce(nw(s))) = true .
    eq (p = intruder) = false .

    eq q1 = intruder .
    eq r1 = q .
    eq r2 = p .
    eq (r3 = n(p,q,r)) = false .

    eq (q = intruder) = false .
	red inv130(s,n(p,q,r)) implies inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	eq n(p,q,r) \in cnonce(nw(s)) = true .
	eq (r4 \in cnonce(nw(s))) = true .
    eq (p = intruder) = false .

    eq q1 = intruder .
    eq r1 = q .
    eq (r2 = p) = false .
    eq q = intruder .
	red inv130(s,n(p,q,r)) implies inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	eq n(p,q,r) \in cnonce(nw(s)) = true .
	eq (r4 \in cnonce(nw(s))) = true .
    eq (p = intruder) = false .

    eq q1 = intruder .
    eq r1 = q .
    eq (r2 = p) = false .
    eq (q = intruder) = false .
	red inv130(s,n(p,q,r)) implies inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	eq n(p,q,r) \in cnonce(nw(s)) = true .
	eq (r4 \in cnonce(nw(s))) = true .
    eq (p = intruder) = false .

    eq q1 = intruder .
    eq (r1 = q) = false .
    eq q = intruder .
	red inv130(s,n(p,q,r)) implies inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	eq n(p,q,r) \in cnonce(nw(s)) = true .
	eq (r4 \in cnonce(nw(s))) = true .
    eq (p = intruder) = false .

    eq q1 = intruder .
    eq (r1 = q) = false .
    eq (q = intruder) = false .
	red inv130(s,n(p,q,r)) implies inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	eq n(p,q,r) \in cnonce(nw(s)) = true .
	eq (r4 \in cnonce(nw(s))) = true .
    eq (p = intruder) = false .

    eq (q1 = intruder) = false .
    red inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	eq n(p,q,r) \in cnonce(nw(s)) = true .
	eq (r4 \in cnonce(nw(s))) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = false .
	eq n(p,q,r) \in cnonce(nw(s)) = true .
	red inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq n(p,q,r) \in cnonce(nw(s)) = false .
    eq p = intruder .
	red inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

-- ntnf
open INV .
  -- :id(inv17)
	op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op r4 : -> Nonce .
	op s : -> System .
	eq n(p,q,r) \in cnonce(nw(s)) = false .
    eq (p = intruder) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

-- fkm31(all true)
open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher3 .
	op s : -> System .
	eq (r3 \in cenc3(nw(s))) = true .
	red inv170(s,p,q,q1,r,n) implies inv170(fkm31(s,r1,r2,r3),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Cipher3 .
	op s : -> System .
	eq (r3 \in cenc3(nw(s))) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(fkm31(s,r1,r2,r3),p,q,q1,r,n) .
close

-- fkm32(all true)
open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = true .
	red inv170(s,p,q,q1,r,n) implies inv170(fkm32(s,r1,r2,r3),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Nonce .
	op s : -> System .
	eq (r3 \in cnonce(nw(s))) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(fkm32(s,r1,r2,r3),p,q,q1,r,n) .
close

-- sdm1
open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Random .
	op s : -> System .
	eq (r3 \in ur(s)) = true .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm1(s,r1,r2,r3),p,q,q1,r,n) .
close

--> true
open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Random .
	op s : -> System .
	eq (r3 \in ur(s)) = false .
    eq p = intruder .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm1(s,r1,r2,r3),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Random .
	op s : -> System .
	eq (r3 \in ur(s)) = false .
    eq (p = intruder) = false .
    
    eq r = r3 .
    eq r2 = q .
    eq r1 = p .
    eq q1 = q .
      
	red inv170(s,p,q,q1,r,n) implies inv170(sdm1(s,r1,r2,r3),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Random .
	op s : -> System .
	eq (r3 \in ur(s)) = false .
    eq (p = intruder) = false .
    
    eq r = r3 .
    eq r2 = q .
    eq r1 = p .
    eq (q1 = q) = false .

    eq m1(p,p,q,enc1(q,n(p,q,r3),p)) \in nw(s) = true .

	red inv170(s,p,q,q1,r,n) implies inv170(sdm1(s,r1,r2,r3),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Random .
	op s : -> System .
	eq (r3 \in ur(s)) = false .
    eq (p = intruder) = false .
    
    eq r = r3 .
    eq r2 = q .
    eq r1 = p .
    eq (q1 = q) = false .

    eq m1(p,p,q,enc1(q,n(p,q,r3),p)) \in nw(s) = false .
    eq m2(q,q,p,enc2(p,n(p,q,r3),n,q)) \in nw(s) = true .

	red inv170(s,p,q,q1,r,n) implies inv170(sdm1(s,r1,r2,r3),p,q,q1,r,n) .
close

-- false
open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Random .
	op s : -> System .
	eq (r3 \in ur(s)) = false .
    eq (p = intruder) = false .
    
    eq r = r3 .
    eq r2 = q .
    eq r1 = p .
    eq (q1 = q) = false .

    eq m1(p,p,q,enc1(q,n(p,q,r3),p)) \in nw(s) = false .
    eq m2(q,q,p,enc2(p,n(p,q,r3),n,q)) \in nw(s) = false .
    eq m2(q1,q,p,enc2(p,n(p,q,r3),n,q)) \in nw(s) = true .
      
	red inv170(s,p,q,q1,r,n) implies inv170(sdm1(s,r1,r2,r3),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Random .
	op s : -> System .
	eq (r3 \in ur(s)) = false .
    eq (p = intruder) = false .
    
    eq r = r3 .
    eq r2 = q .
    eq r1 = p .
    eq (q1 = q) = false .

    eq m1(p,p,q,enc1(q,n(p,q,r3),p)) \in nw(s) = false .
    eq m2(q,q,p,enc2(p,n(p,q,r3),n,q)) \in nw(s) = false .
    eq m2(q1,q,p,enc2(p,n(p,q,r3),n,q)) \in nw(s) = false .

      
	red inv170(s,p,q,q1,r,n) implies inv170(sdm1(s,r1,r2,r3),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Random .
	op s : -> System .
	eq (r3 \in ur(s)) = false .
    eq (p = intruder) = false .
    
    eq r = r3 .
    eq r2 = q .
    eq (r1 = p) = false .

	red inv170(s,p,q,q1,r,n) implies inv170(sdm1(s,r1,r2,r3),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Random .
	op s : -> System .
	eq (r3 \in ur(s)) = false .
    eq (p = intruder) = false .
    
    eq r = r3 .
    eq (r2 = q) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm1(s,r1,r2,r3),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Principal .
	op r3 : -> Random .
	op s : -> System .
	eq (r3 \in ur(s)) = false .
    eq (p = intruder) = false .
    
    eq (r = r3) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm1(s,r1,r2,r3),p,q,q1,r,n) .
close

-- sdm2(all true)
--> true
open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op s : -> System .
  eq r3 \in nw(s) = true .
  eq m1?(r3) = true .
  eq receiver(r3) = r1 .
  eq key(cipher1(r3)) = r1 .
  eq principal(cipher1(r3)) = sender(r3) .
  eq r2 \in ur(s) = true .

  red inv170(s,p,q,q1,r,n) implies inv170(sdm2(s,r1,r2,r3),p,q,q1,r,n) .
close

--> true
open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op s : -> System .
  eq r3 \in nw(s) = true .
  eq m1?(r3) = true .
  eq receiver(r3) = r1 .
  eq key(cipher1(r3)) = r1 .
  eq principal(cipher1(r3)) = sender(r3) .
  eq r2 \in ur(s) = false .

  eq (m2(q1,q,p,enc2(p,n(p,q,r),n,q))
      = m2(r1,r1,sender(r3),
         enc2(sender(r3),nonce(cipher1(r3)),n(r1,sender(r3),r2),r1))) = true .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm2(s,r1,r2,r3),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op s : -> System .
  eq r3 \in nw(s) = true .
  eq m1?(r3) = true .
  eq receiver(r3) = r1 .
  eq key(cipher1(r3)) = r1 .
  eq principal(cipher1(r3)) = sender(r3) .
  eq r2 \in ur(s) = false .
  
  eq (m2(q1,q,p,enc2(p,n(p,q,r),n,q))
      = m2(r1,r1,sender(r3),
         enc2(sender(r3),nonce(cipher1(r3)),n(r1,sender(r3),r2),r1))) = false .
  eq m2(q,q,p,enc2(p,n(p,q,r),n,q))
      = m2(r1,r1,sender(r3),
         enc2(sender(r3),nonce(cipher1(r3)),n(r1,sender(r3),r2),r1)) .
	
	red inv170(s,p,q,q1,r,n) implies inv170(sdm2(s,r1,r2,r3),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op s : -> System .
    
  eq r3 \in nw(s) = true .
  eq m1?(r3) = true .
  eq receiver(r3) = r1 .
  eq key(cipher1(r3)) = r1 .
  eq principal(cipher1(r3)) = sender(r3) .
  eq r2 \in ur(s) = false .
  
  eq (m2(q1,q,p,enc2(p,n(p,q,r),n,q))
      = m2(r1,r1,sender(r3),
         enc2(sender(r3),nonce(cipher1(r3)),n(r1,sender(r3),r2),r1))) = false .
  eq (m2(q,q,p,enc2(p,n(p,q,r),n,q))
      = m2(r1,r1,sender(r3),
         enc2(sender(r3),nonce(cipher1(r3)),n(r1,sender(r3),r2),r1))) = false .
--
	red inv170(s,p,q,q1,r,n) implies inv170(sdm2(s,r1,r2,r3),p,q,q1,r,n) .
close

-- true
open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op s : -> System .
  eq r3 \in nw(s) = true .
  eq m1?(r3) = true .
  eq receiver(r3) = r1 .
  eq key(cipher1(r3)) = r1 .
  eq (principal(cipher1(r3)) = sender(r3)) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm2(s,r1,r2,r3),p,q,q1,r,n) .
close

-- true
open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op s : -> System .
  eq r3 \in nw(s) = true .
  eq m1?(r3) = true .
  eq receiver(r3) = r1 .
  eq (key(cipher1(r3)) = r1) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm2(s,r1,r2,r3),p,q,q1,r,n) .
close

-- true
open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op s : -> System .
  eq r3 \in nw(s) = true .
  eq m1?(r3) = true .
  eq (receiver(r3) = r1) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm2(s,r1,r2,r3),p,q,q1,r,n) .
close

-- true
open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op s : -> System .
  eq r3 \in nw(s) = true .
  eq m1?(r3) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm2(s,r1,r2,r3),p,q,q1,r,n) .
close

-- true
open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op s : -> System .
  eq r3 \in nw(s) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm2(s,r1,r2,r3),p,q,q1,r,n) .
close

-- sdm3(true)
--> true
open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq receiver(r4) = r1 .
	eq key(cipher2(r4)) = r1 .
    eq nonce1(cipher2(r4)) = n(r1,sender(r4),r2) .
	eq principal(cipher2(r4)) = sender(r4) .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq receiver(r4) = r1 .
	eq key(cipher2(r4)) = r1 .
    eq nonce1(cipher2(r4)) = n(r1,sender(r4),r2) .
	eq (principal(cipher2(r4)) = sender(r4)) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq receiver(r4) = r1 .
	eq key(cipher2(r4)) = r1 .
    eq (nonce1(cipher2(r4)) = n(r1,sender(r4),r2)) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq receiver(r4) = r1 .
	eq (key(cipher2(r4)) = r1) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq (receiver(r4) = r1) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq (principal(cipher1(r3)) = r1) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq (nonce(cipher1(r3)) = n(r1,sender(r4),r2)) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

--> true
open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq (key(cipher1(r3)) = sender(r4)) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

--> true
open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq (receiver(r3) = sender(r4)) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

--> true
open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq (sender(r3) = r1) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

--> true
open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq (creator(r3) = r1) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

--> true
open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

--> true
open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

--> true
open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

--> true
open INV .
  -- :id(inv17)
    op p : -> Principal .
  	op q : -> Principal .
	op q1 : -> Principal .
  	op r : -> Random .
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

-- open INV .
--   :proof(inv17)
-- close