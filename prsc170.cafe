-- -- init
-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
--   red inv170(init,p,q,q1,r,n1) .
-- close

-- -- fkm11
-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Cipher1 .
-- 	op s : -> System .
-- 	eq (r3 \in cenc1(nw(s))) = true .
--     eq p = intruder .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(fkm11(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Cipher1 .
-- 	op s : -> System .
-- 	eq (r3 \in cenc1(nw(s))) = true .
--     eq (p = intruder) = false .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(fkm11(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Cipher1 .
-- 	op s : -> System .
-- 	eq (r3 \in cenc1(nw(s))) = false .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(fkm11(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- -- fkm12
-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Nonce .
-- 	op s : -> System .
-- 	eq (r3 \in cnonce(nw(s))) = true .
--     eq p = intruder .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(fkm12(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Nonce .
-- 	op s : -> System .
-- 	eq (r3 \in cnonce(nw(s))) = true .
--     eq (p = intruder) = false .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(fkm12(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Nonce .
-- 	op s : -> System .
-- 	eq (r3 \in cnonce(nw(s))) = false .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(fkm12(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- -- fkm21
-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Cipher2 .
-- 	op s : -> System .
-- 	eq enc2(p,n(p,q,r),n,q) \in cenc2(nw(s)) = true .
--     eq p = intruder .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(fkm21(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Cipher2 .
-- 	op s : -> System .
-- 	eq enc2(p,n(p,q,r),n,q) \in cenc2(nw(s)) = true .
--     eq (p = intruder) = false .

--     eq m1(p,p,q,enc1(q,n(p,q,r),p)) \in nw(s) = true .
-- 	-- eq (m2(intruder,r1,r2,r3) = m2(q1,q,p,enc2(p,n(p,q,r),n,q))) = true .

--     eq q1 = intruder .
--     eq r1 = q .
--     eq r2 = p .
--     eq r3 = enc2(p,n(p,q,r),n,q) .

--     eq m2(q,q,p,enc2(p,n(p,q,r),n,q)) \in nw(s) = true .
--     eq (m2(q,q,p,enc2(p,n(p,q,r),n,q)) = m2(intruder,q,p,enc2(p,n(p,q,r),n,q))) = true .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(fkm21(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Cipher2 .
-- 	op s : -> System .
-- 	eq enc2(p,n(p,q,r),n,q) \in cenc2(nw(s)) = true .
--     eq (p = intruder) = false .

--     eq m1(p,p,q,enc1(q,n(p,q,r),p)) \in nw(s) = true .
-- 	-- eq (m2(intruder,r1,r2,r3) = m2(q1,q,p,enc2(p,n(p,q,r),n,q))) = true .

--     eq q1 = intruder .
--     eq r1 = q .
--     eq r2 = p .
--     eq r3 = enc2(p,n(p,q,r),n,q) .

--     eq m2(q,q,p,enc2(p,n(p,q,r),n,q)) \in nw(s) = true .
--     eq (m2(q,q,p,enc2(p,n(p,q,r),n,q)) = m2(intruder,q,p,enc2(p,n(p,q,r),n,q))) = false .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(fkm21(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Cipher2 .
-- 	op s : -> System .
-- 	eq enc2(p,n(p,q,r),n,q) \in cenc2(nw(s)) = true .
--     eq (p = intruder) = false .

--     eq m1(p,p,q,enc1(q,n(p,q,r),p)) \in nw(s) = true .
-- 	-- eq (m2(intruder,r1,r2,r3) = m2(q1,q,p,enc2(p,n(p,q,r),n,q))) = true .

--     eq q1 = intruder .
--     eq r1 = q .
--     eq r2 = p .
--     eq r3 = enc2(p,n(p,q,r),n,q) .

--     eq m2(q,q,p,enc2(p,n(p,q,r),n,q)) \in nw(s) = false .
-- 	eq (m2(q,q,p,enc2(p,n(p,q,r),n,q)) = m2(intruder,q,p,enc2(p,n(p,q,r),n,q))) = true .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(fkm21(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Cipher2 .
-- 	op s : -> System .
-- 	eq enc2(p,n(p,q,r),n,q) \in cenc2(nw(s)) = true .
--     eq (p = intruder) = false .

--     eq m1(p,p,q,enc1(q,n(p,q,r),p)) \in nw(s) = true .
-- 	-- eq (m2(intruder,r1,r2,r3) = m2(q1,q,p,enc2(p,n(p,q,r),n,q))) = true .

--     eq q1 = intruder .
--     eq r1 = q .
--     eq r2 = p .
--     eq r3 = enc2(p,n(p,q,r),n,q) .

--     eq m2(q,q,p,enc2(p,n(p,q,r),n,q)) \in nw(s) = false .
-- 	eq (m2(q,q,p,enc2(p,n(p,q,r),n,q)) = m2(intruder,q,p,enc2(p,n(p,q,r),n,q))) = false .
-- 	red inv220(s,p,q,r,n) implies inv170(s,p,q,q1,r,n) implies inv170(fkm21(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Cipher2 .
-- 	op s : -> System .
-- 	eq enc2(p,n(p,q,r),n,q) \in cenc2(nw(s)) = true .
--     eq (p = intruder) = false .

--     eq m1(p,p,q,enc1(q,n(p,q,r),p)) \in nw(s) = true .
-- 	-- eq (m2(intruder,r1,r2,r3) = m2(q1,q,p,enc2(p,n(p,q,r),n,q))) = true .

--     eq q1 = intruder .
--     eq r1 = q .
--     eq r2 = p .
--     eq (r3 = enc2(p,n(p,q,r),n,q)) = false .
-- 	eq q = intruder .

-- 	red inv170(s,p,q,q1,r,n) implies inv170(fkm21(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- -- long term
-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Cipher2 .
-- 	op s : -> System .
-- 	eq enc2(p,n(p,q,r),n,q) \in cenc2(nw(s)) = true .
--     eq (p = intruder) = false .

--     eq m1(p,p,q,enc1(q,n(p,q,r),p)) \in nw(s) = true .

--     eq q1 = intruder .
--     eq r1 = q .
--     eq r2 = p .
--     eq (r3 = enc2(p,n(p,q,r),n,q)) = false .
	
-- 	eq (q = intruder) = false .

-- 	red inv220(s,p,q,r,n) implies inv170(s,p,q,q1,r,n) implies inv170(fkm21(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- -- long term
-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Cipher2 .
-- 	op s : -> System .
-- 	eq enc2(p,n(p,q,r),n,q) \in cenc2(nw(s)) = true .
--     eq (p = intruder) = false .

--     eq m1(p,p,q,enc1(q,n(p,q,r),p)) \in nw(s) = true .

--     eq q1 = intruder .
--     eq r1 = q .
--     eq (r2 = p) = false .

-- 	red inv220(s,p,q,r,n) implies inv170(s,p,q,q1,r,n) implies inv170(fkm21(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- -- long term
-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Cipher2 .
-- 	op s : -> System .
-- 	eq enc2(p,n(p,q,r),n,q) \in cenc2(nw(s)) = true .
--     eq (p = intruder) = false .

--     eq m1(p,p,q,enc1(q,n(p,q,r),p)) \in nw(s) = true .

--     eq q1 = intruder .
--     eq (r1 = q) = false .

-- 	red inv220(s,p,q,r,n) implies inv170(s,p,q,q1,r,n) implies inv170(fkm21(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- -- long term
-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Cipher2 .
-- 	op s : -> System .
-- 	eq enc2(p,n(p,q,r),n,q) \in cenc2(nw(s)) = true .
--     eq (p = intruder) = false .

--     eq m1(p,p,q,enc1(q,n(p,q,r),p)) \in nw(s) = true .

--     eq (q1 = intruder) = false .
-- 	red inv220(s,p,q,r,n) implies inv170(s,p,q,q1,r,n) implies inv170(fkm21(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Cipher2 .
-- 	op s : -> System .
-- 	eq (r3 \in cenc2(nw(s))) = true .
--     eq (p = intruder) = false .
--     eq m1(p,p,q,enc1(q,n(p,q,r),p)) \in nw(s) = false .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(fkm21(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Cipher2 .
-- 	op s : -> System .
-- 	eq (r3 \in cenc2(nw(s))) = false .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(fkm21(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- -- fkm22
-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Nonce .
-- 	op r4 : -> Nonce .
-- 	op s : -> System .
-- 	-- eq (r3 \in cnonce(nw(s))) = true .
-- 	eq n(p,q,r) \in cnonce(nw(s)) = true .
-- 	eq (r4 \in cnonce(nw(s))) = true .
--     eq p = intruder .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
-- close

-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Nonce .
-- 	op r4 : -> Nonce .
-- 	op s : -> System .
-- 	-- eq (r3 \in cnonce(nw(s))) = true .
-- 	eq n(p,q,r) \in cnonce(nw(s)) = true .
-- 	eq (r4 \in cnonce(nw(s))) = true .
--     eq (p = intruder) = false .

--     -- eq (m2(q1,q,p,enc2(p,n(p,q,r),n,q))
--     --   = m2(intruder,r1,r2,enc2(r2,r3,r4,r1))) = true .
-- 	eq q1 = intruder .
--   	eq r1 = q .
--   	eq r2 = p .
--   	eq r3 = n(p,q,r) .
--   	eq n = r4 .

-- 	eq q = intruder .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
-- close

-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Nonce .
-- 	op r4 : -> Nonce .
-- 	op s : -> System .
-- 	-- eq (r3 \in cnonce(nw(s))) = true .
-- 	eq n(p,q,r) \in cnonce(nw(s)) = true .
-- 	eq (r4 \in cnonce(nw(s))) = true .
--     eq (p = intruder) = false .

--     -- eq (m2(q1,q,p,enc2(p,n(p,q,r),n,q))
--     --   = m2(intruder,r1,r2,enc2(r2,r3,r4,r1))) = true .
-- 	eq q1 = intruder .
--   	eq r1 = q .
--   	eq r2 = p .
--   	eq r3 = n(p,q,r) .
--   	eq n = r4 .

-- 	eq (q = intruder) = false .
-- 	red inv130(s,r3) implies inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
-- close

-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Nonce .
-- 	op r4 : -> Nonce .
-- 	op s : -> System .
-- 	-- eq (r3 \in cnonce(nw(s))) = true .
-- 	eq n(p,q,r) \in cnonce(nw(s)) = true .
-- 	eq (r4 \in cnonce(nw(s))) = true .
--     eq (p = intruder) = false .

--     -- eq (m2(q1,q,p,enc2(p,n(p,q,r),n,q))
--     --   = m2(intruder,r1,r2,enc2(r2,r3,r4,r1))) = true .
-- 	eq q1 = intruder .
--   	eq r1 = q .
--   	eq r2 = p .
--   	eq r3 = n(p,q,r) .
--   	eq (n = r4) = false .
-- 	red inv130(s,r3) implies inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
-- close

-- -- long term
-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Nonce .
-- 	op r4 : -> Nonce .
-- 	op s : -> System .
-- 	-- eq (r3 \in cnonce(nw(s))) = true .
-- 	eq n(p,q,r) \in cnonce(nw(s)) = true .
-- 	eq (r4 \in cnonce(nw(s))) = true .
--     eq (p = intruder) = false .

-- 	eq q1 = intruder .
--   	eq r1 = q .
--   	eq r2 = p .
--   	eq (r3 = n(p,q,r)) = false .
   
-- 	red inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
-- close

-- -- long term
-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Nonce .
-- 	op r4 : -> Nonce .
-- 	op s : -> System .
-- 	-- eq (r3 \in cnonce(nw(s))) = true .
-- 	eq n(p,q,r) \in cnonce(nw(s)) = true .
-- 	eq (r4 \in cnonce(nw(s))) = true .
--     eq (p = intruder) = false .

-- 	eq q1 = intruder .
--   	eq r1 = q .
--   	eq (r2 = p) = false .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
-- close

-- -- long term
-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Nonce .
-- 	op r4 : -> Nonce .
-- 	op s : -> System .
-- 	-- eq (r3 \in cnonce(nw(s))) = true .
-- 	eq n(p,q,r) \in cnonce(nw(s)) = true .
-- 	eq (r4 \in cnonce(nw(s))) = true .
--     eq (p = intruder) = false .

-- 	eq q1 = intruder .
--   	eq (r1 = q) = false .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
-- close

-- -- long term
-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Nonce .
-- 	op r4 : -> Nonce .
-- 	op s : -> System .
-- 	-- eq (r3 \in cnonce(nw(s))) = true .
-- 	eq n(p,q,r) \in cnonce(nw(s)) = true .
-- 	eq (r4 \in cnonce(nw(s))) = true .
--     eq (p = intruder) = false .

-- 	eq (q1 = intruder) = false .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
-- close

-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Nonce .
-- 	op r4 : -> Nonce .
-- 	op s : -> System .
-- 	eq n(p,q,r) \in cnonce(nw(s)) = true .
-- 	eq (r4 \in cnonce(nw(s))) = false .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
-- close

-- -- long term
-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Nonce .
-- 	op r4 : -> Nonce .
-- 	op s : -> System .
-- 	eq n(p,q,r) \in cnonce(nw(s)) = false .
-- 	-- eq r3 \in cnonce(nw(s)) = false .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
-- close

-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Nonce .
-- 	op r4 : -> Nonce .
-- 	op s : -> System .
-- 	eq n(p,q,r) \in cnonce(nw(s)) = false .
-- 	eq r3 = n(p,q,r) .
-- 	red lm1(r3,n(p,q,r),cnonce(nw(s)))
-- 	implies inv170(s,p,q,q1,r,n) implies inv170(fkm22(s,r1,r2,r3,r4),p,q,q1,r,n) .
-- close

-- -- fkm31
-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Cipher3 .
-- 	op s : -> System .
-- 	eq (r3 \in cenc3(nw(s))) = true .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(fkm31(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Cipher3 .
-- 	op s : -> System .
-- 	eq (r3 \in cenc3(nw(s))) = false .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(fkm31(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- -- fkm32
-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Nonce .
-- 	op s : -> System .
-- 	eq (r3 \in cnonce(nw(s))) = true .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(fkm32(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Nonce .
-- 	op s : -> System .
-- 	eq (r3 \in cnonce(nw(s))) = false .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(fkm32(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- -- sdm1
-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Random .
-- 	op s : -> System .
-- 	eq (r3 \in ur(s)) = true .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(sdm1(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- --> true
-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Random .
-- 	op s : -> System .
-- 	eq (r3 \in ur(s)) = false .
--     eq p = intruder .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(sdm1(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- -- long term
-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Random .
-- 	op s : -> System .
--     op nw10 : -> Network .
-- 	eq (r3 \in ur(s)) = false .
--     eq (p = intruder) = false .
    
--     eq r = r3 .
--     eq r2 = q .
--     eq r1 = p .
--     eq m2(q1,q,p,enc2(p,n(p,q,r3),n,q)) \in nw(s) = true .
      
-- 	red inv190(s,p,q,r,n) implies inv170(s,p,q,q1,r,n) implies inv170(sdm1(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Random .
-- 	op s : -> System .
--     op nw10 : -> Network .
-- 	eq (r3 \in ur(s)) = false .
--     eq (p = intruder) = false .
    
--     eq r = r3 .
--     eq r2 = q .
--     eq r1 = p .
    
--     eq m2(q1,q,p,enc2(p,n(p,q,r3),n,q)) \in nw(s) = false .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(sdm1(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Random .
-- 	op s : -> System .
--     op nw10 : -> Network .
-- 	eq (r3 \in ur(s)) = false .
--     eq (p = intruder) = false .
    
--     eq r = r3 .
--     eq r2 = q .
--     eq (r1 = p) = false .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(sdm1(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Random .
-- 	op s : -> System .
--     op nw10 : -> Network .
-- 	eq (r3 \in ur(s)) = false .
--     eq (p = intruder) = false .
    
--     eq r = r3 .
--     eq (r2 = q) = false .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(sdm1(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Random .
-- 	op s : -> System .
--     op nw10 : -> Network .
-- 	eq (r3 \in ur(s)) = false .
--     eq (p = intruder) = false .
    
--     eq r = r3 .
--     eq (r2 = q) = false .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(sdm1(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Random .
-- 	op s : -> System .
--     op nw10 : -> Network .
-- 	eq (r3 \in ur(s)) = false .
--     eq (p = intruder) = false .
    
--     eq (r = r3) = false .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(sdm1(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- -- sdm2
-- --> true
-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Random .
-- 	op r3 : -> Message .
-- 	op s : -> System .
--   eq r3 \in nw(s) = true .
--   eq m1?(r3) = true .
--   eq receiver(r3) = r1 .
--   eq key(cipher1(r3)) = r1 .
--   eq principal(cipher1(r3)) = sender(r3) .
--   eq r2 \in ur(s) = true .

--   red inv170(s,p,q,q1,r,n) implies inv170(sdm2(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- --> true
-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Random .
-- 	op r3 : -> Message .
-- 	op s : -> System .
--     op nw10 : -> Network .
--   eq r3 \in nw(s) = true .
--   eq m1?(r3) = true .
--   eq receiver(r3) = r1 .
--   eq key(cipher1(r3)) = r1 .
--   eq principal(cipher1(r3)) = sender(r3) .
--   eq r2 \in ur(s) = false .

-- --   eq (m2(q1,q,p,enc2(p,n(p,q,r),n,q))
-- --       = m2(r1,r1,sender(r3),
-- --          enc2(sender(r3),nonce(cipher1(r3)),n(r1,sender(r3),r2),r1))) = false .
--   eq q1 = r1 .
--   eq p = sender(r3) .
--   eq nonce(cipher1(r3)) = n(p,q,r) .
--   eq n = n(r1,sender(r3),r2) .
--   eq q = r1 .

-- --   eq (m2(q,q,p,enc2(p,n(p,q,r),n,q))
-- --       = m2(r1,r1,sender(r3),
-- --          enc2(sender(r3),nonce(cipher1(r3)),n(r1,sender(r3),r2),r1))) = false .
-- -- --
-- 	red inv170(s,p,q,q1,r,n) implies inv170(sdm2(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Random .
-- 	op r3 : -> Message .
-- 	op s : -> System .
--     op nw1 : -> Network .
--   eq r3 \in nw(s) = true .
--   eq m1?(r3) = true .
--   eq receiver(r3) = r1 .
--   eq key(cipher1(r3)) = r1 .
--   eq principal(cipher1(r3)) = sender(r3) .
--   eq r2 \in ur(s) = false .
  
--   eq (m2(q1,q,p,enc2(p,n(p,q,r),n,q))
--       = m2(r1,r1,sender(r3),
--          enc2(sender(r3),nonce(cipher1(r3)),n(r1,sender(r3),r2),r1))) = false .
--   eq m2(q,q,p,enc2(p,n(p,q,r),n,q))
--       = m2(r1,r1,sender(r3),
--          enc2(sender(r3),nonce(cipher1(r3)),n(r1,sender(r3),r2),r1)) .
	
-- 	red inv170(s,p,q,q1,r,n) implies inv170(sdm2(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Random .
-- 	op r3 : -> Message .
-- 	op s : -> System .
--     op nw1 : -> Network .
--   eq r3 \in nw(s) = true .
--   eq m1?(r3) = true .
--   eq receiver(r3) = r1 .
--   eq key(cipher1(r3)) = r1 .
--   eq principal(cipher1(r3)) = sender(r3) .
--   eq r2 \in ur(s) = false .
  
--   eq (m2(q1,q,p,enc2(p,n(p,q,r),n,q))
--       = m2(r1,r1,sender(r3),
--          enc2(sender(r3),nonce(cipher1(r3)),n(r1,sender(r3),r2),r1))) = false .
--   eq (m2(q,q,p,enc2(p,n(p,q,r),n,q))
--       = m2(r1,r1,sender(r3),
--          enc2(sender(r3),nonce(cipher1(r3)),n(r1,sender(r3),r2),r1))) = false .
-- --
-- 	red inv170(s,p,q,q1,r,n) implies inv170(sdm2(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- -- true
-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Random .
-- 	op r3 : -> Message .
-- 	op s : -> System .
--   eq r3 \in nw(s) = true .
--   eq m1?(r3) = true .
--   eq receiver(r3) = r1 .
--   eq key(cipher1(r3)) = r1 .
--   eq (principal(cipher1(r3)) = sender(r3)) = false .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(sdm2(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- -- true
-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Random .
-- 	op r3 : -> Message .
-- 	op s : -> System .
--   eq r3 \in nw(s) = true .
--   eq m1?(r3) = true .
--   eq receiver(r3) = r1 .
--   eq (key(cipher1(r3)) = r1) = false .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(sdm2(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- -- true
-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Random .
-- 	op r3 : -> Message .
-- 	op s : -> System .
--   eq r3 \in nw(s) = true .
--   eq m1?(r3) = true .
--   eq (receiver(r3) = r1) = false .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(sdm2(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- -- true
-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Random .
-- 	op r3 : -> Message .
-- 	op s : -> System .
--   eq r3 \in nw(s) = true .
--   eq m1?(r3) = false .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(sdm2(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- -- true
-- open INV .
--   -- :id(nslpk1)
-- 	op n : -> Nonce .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Random .
-- 	op r3 : -> Message .
-- 	op s : -> System .
--   eq r3 \in nw(s) = false .
-- 	red inv170(s,p,q,q1,r,n) implies inv170(sdm2(s,r1,r2,r3),p,q,q1,r,n) .
-- close

-- sdm3
--> true
open INV .
  -- :id(nslpk1)
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq receiver(r4) = r1 .
	eq key(cipher2(r4)) = r1 .
    eq nonce1(cipher2(r4)) = n(r1,sender(r4),r2) .
	eq principal(cipher2(r4)) = sender(r4) .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(nslpk1)
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq receiver(r4) = r1 .
	eq key(cipher2(r4)) = r1 .
    eq nonce1(cipher2(r4)) = n(r1,sender(r4),r2) .
	eq (principal(cipher2(r4)) = sender(r4)) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(nslpk1)
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq receiver(r4) = r1 .
	eq key(cipher2(r4)) = r1 .
    eq (nonce1(cipher2(r4)) = n(r1,sender(r4),r2)) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(nslpk1)
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq receiver(r4) = r1 .
	eq (key(cipher2(r4)) = r1) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(nslpk1)
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq (receiver(r4) = r1) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(nslpk1)
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq (principal(cipher1(r3)) = r1) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

open INV .
  -- :id(nslpk1)
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq (nonce(cipher1(r3)) = n(r1,sender(r4),r2)) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

--> true
open INV .
  -- :id(nslpk1)
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq (key(cipher1(r3)) = sender(r4)) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

--> true
open INV .
  -- :id(nslpk1)
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq (receiver(r3) = sender(r4)) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

--> true
open INV .
  -- :id(nslpk1)
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq (sender(r3) = r1) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

--> true
open INV .
  -- :id(nslpk1)
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq (creator(r3) = r1) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

--> true
open INV .
  -- :id(nslpk1)
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

--> true
open INV .
  -- :id(nslpk1)
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

--> true
open INV .
  -- :id(nslpk1)
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

--> true
open INV .
  -- :id(nslpk1)
	op n : -> Nonce .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = false .
	red inv170(s,p,q,q1,r,n) implies inv170(sdm3(s,r1,r2,r3,r4),p,q,q1,r,n) .
close

-- open INV .
--   :proof(nslpk1)
-- close