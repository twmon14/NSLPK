-- -- init
-- open INV .
--   -- :id(nslpk1)
--   op p : -> Principal .
--   op q : -> Principal .
--   op r : -> Random .
--   red inv210(init,p,q,r) .
-- close

-- -- fkm11(all true)
-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Cipher1 .
-- 	op s : -> System .
-- 	eq (r3 \in cenc1(nw(s))) = true .
--   eq key(r3) = intruder .
-- 	red inv100(s,r3) implies inv210(s,p,q,r) implies inv210(fkm11(s,r1,r2,r3),p,q,r) .
-- close

-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Cipher1 .
-- 	op s : -> System .
-- 	eq (r3 \in cenc1(nw(s))) = true .
--     eq (key(r3) = intruder) = false .
-- 	red inv210(s,p,q,r) implies inv210(fkm11(s,r1,r2,r3),p,q,r) .
-- close

-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Cipher1 .
-- 	op s : -> System .
-- 	eq (r3 \in cenc1(nw(s))) = false .
-- 	red inv210(s,p,q,r) implies inv210(fkm11(s,r1,r2,r3),p,q,r) .
-- close

-- -- fkm12(all true)
-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Nonce .
-- 	op s : -> System .
-- 	eq (r3 \in cnonce(nw(s))) = true .
--     eq n(p,q,r) = r3 .
-- 	red inv210(s,p,q,r) implies inv210(fkm12(s,r1,r2,r3),p,q,r) .
-- close

-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Nonce .
-- 	op s : -> System .
-- 	eq (r3 \in cnonce(nw(s))) = true .
--     eq (n(p,q,r) = r3) = false .
-- 	red inv210(s,p,q,r) implies inv210(fkm12(s,r1,r2,r3),p,q,r) .
-- close

-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Nonce .
-- 	op s : -> System .
-- 	eq (r3 \in cnonce(nw(s))) = false .
-- 	red inv210(s,p,q,r) implies inv210(fkm12(s,r1,r2,r3),p,q,r) .
-- close

-- -- fkm21(all true)
-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Cipher2 .
-- 	op s : -> System .
-- 	eq (r3 \in cenc2(nw(s))) = true .
--     eq key(r3) = intruder .

-- 	red inv110(s,r3) implies inv210(s,p,q,r) implies inv210(fkm21(s,r1,r2,r3),p,q,r) .
-- close

-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Cipher2 .
-- 	op s : -> System .
-- 	eq (r3 \in cenc2(nw(s))) = true .
--     eq (key(r3) = intruder) = false .

-- 	red inv210(s,p,q,r) implies inv210(fkm21(s,r1,r2,r3),p,q,r) .
-- close

-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Cipher2 .
-- 	op s : -> System .
-- 	eq (r3 \in cenc2(nw(s))) = false .
-- 	red inv210(s,p,q,r) implies inv210(fkm21(s,r1,r2,r3),p,q,r) .
-- close

-- -- fkm22(all true)
-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Nonce .
-- 	op r4 : -> Nonce .
-- 	op s : -> System .
-- 	eq (r3 \in cnonce(nw(s))) = true .
-- 	eq (r4 \in cnonce(nw(s))) = true .
--       eq n(p,q,r) = r3 .

-- 	red inv210(s,p,q,r) implies inv210(fkm22(s,r1,r2,r3,r4),p,q,r) .
-- close

-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Nonce .
-- 	op r4 : -> Nonce .
-- 	op s : -> System .
-- 	eq (r3 \in cnonce(nw(s))) = true .
-- 	eq (r4 \in cnonce(nw(s))) = true .
--       eq (n(p,q,r) = r3) = false .
--       eq n(p,q,r) = r4 .
-- 	red inv210(s,p,q,r) implies inv210(fkm22(s,r1,r2,r3,r4),p,q,r) .
-- close

-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Nonce .
-- 	op r4 : -> Nonce .
-- 	op s : -> System .
-- 	eq (r3 \in cnonce(nw(s))) = true .
-- 	eq (r4 \in cnonce(nw(s))) = true .
--       eq (n(p,q,r) = r3) = false .
--       eq (n(p,q,r) = r4) = false .
-- 	red inv210(s,p,q,r) implies inv210(fkm22(s,r1,r2,r3,r4),p,q,r) .
-- close

-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Nonce .
-- 	op r4 : -> Nonce .
-- 	op s : -> System .
-- 	eq (r3 \in cnonce(nw(s))) = true .
-- 	eq (r4 \in cnonce(nw(s))) = false .
-- 	red inv210(s,p,q,r) implies inv210(fkm22(s,r1,r2,r3,r4),p,q,r) .
-- close

-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Nonce .
-- 	op r4 : -> Nonce .
-- 	op s : -> System .
-- 	eq (r3 \in cnonce(nw(s))) = false .
-- 	red inv210(s,p,q,r) implies inv210(fkm22(s,r1,r2,r3,r4),p,q,r) .
-- close

-- -- fkm31(all true)
-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Cipher3 .
-- 	op s : -> System .
-- 	eq (r3 \in cenc3(nw(s))) = true .
--       eq key(r3) = intruder .

-- 	red inv120(s,r3) implies inv210(s,p,q,r) implies inv210(fkm31(s,r1,r2,r3),p,q,r) .
-- close

-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Cipher3 .
-- 	op s : -> System .
-- 	eq (r3 \in cenc3(nw(s))) = true .
--       eq (key(r3) = intruder) = false .

-- 	red inv120(s,r3) implies inv210(s,p,q,r) implies inv210(fkm31(s,r1,r2,r3),p,q,r) .
-- close

-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Cipher3 .
-- 	op s : -> System .
-- 	eq (r3 \in cenc3(nw(s))) = false .
-- 	red inv210(s,p,q,r) implies inv210(fkm31(s,r1,r2,r3),p,q,r) .
-- close

-- -- fkm32(all true)
-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Nonce .
-- 	op s : -> System .
-- 	eq (r3 \in cnonce(nw(s))) = true .
--       eq n(p,q,r) = r3 .
-- 	red inv210(s,p,q,r) implies inv210(fkm32(s,r1,r2,r3),p,q,r) .
-- close

-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Nonce .
-- 	op s : -> System .
-- 	eq (r3 \in cnonce(nw(s))) = true .
--       eq (n(p,q,r) = r3) = false .
-- 	red inv210(s,p,q,r) implies inv210(fkm32(s,r1,r2,r3),p,q,r) .
-- close

-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Nonce .
-- 	op s : -> System .
-- 	eq (r3 \in cnonce(nw(s))) = false .
-- 	red inv210(s,p,q,r) implies inv210(fkm32(s,r1,r2,r3),p,q,r) .
-- close

-- -- sdm1(all true)
-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Random .
-- 	op s : -> System .
-- 	eq (r3 \in ur(s)) = true .
-- 	red inv210(s,p,q,r) implies inv210(sdm1(s,r1,r2,r3),p,q,r) .
-- close

-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Random .
-- 	op s : -> System .
-- 	eq (r3 \in ur(s)) = false .
--       eq r = r3 .
-- 	red inv210(s,p,q,r) implies inv210(sdm1(s,r1,r2,r3),p,q,r) .
-- close

-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Principal .
-- 	op r3 : -> Random .
-- 	op s : -> System .
-- 	eq (r3 \in ur(s)) = false .
--       eq (r = r3) = false .
-- 	red inv210(s,p,q,r) implies inv210(sdm1(s,r1,r2,r3),p,q,r) .
-- close

-- -- sdm2
-- --> true
-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Random .
-- 	op r3 : -> Message .
-- 	op s : -> System .
--   eq r3 \in nw(s) = true .
--   eq m1?(r3) = true .
--   eq receiver(r3) = r1 .
--   eq key(cipher1(r3)) = r1 .
--   eq principal(cipher1(r3)) = sender(r3) .
--   eq r2 \in ur(s) = true .
-- 	red inv210(s,p,q,r) implies inv210(sdm2(s,r1,r2,r3),p,q,r) .
-- close

-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Random .
-- 	op r3 : -> Message .
-- 	op s : -> System .
--   eq r3 \in nw(s) = true .
--   eq m1?(r3) = true .
--   eq receiver(r3) = r1 .
--   eq key(cipher1(r3)) = r1 .
--   eq principal(cipher1(r3)) = sender(r3) .
--   eq r2 \in ur(s) = false .
--   eq r = r2 .
-- 	red inv210(s,p,q,r) implies inv210(sdm2(s,r1,r2,r3),p,q,r) .
-- close

-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Random .
-- 	op r3 : -> Message .
-- 	op s : -> System .
--   eq r3 \in nw(s) = true .
--   eq m1?(r3) = true .
--   eq receiver(r3) = r1 .
--   eq key(cipher1(r3)) = r1 .
--   eq principal(cipher1(r3)) = sender(r3) .
--   eq r2 \in ur(s) = false .
--   eq (r = r2) = false .
--   eq sender(r3) = intruder .
--   eq nonce(cipher1(r3)) = n(p,q,r) .
--   eq p = intruder .
-- 	red inv210(s,p,q,r) implies inv210(sdm2(s,r1,r2,r3),p,q,r) .
-- close

-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Random .
-- 	op r3 : -> Message .
-- 	op s : -> System .
--   eq r3 \in nw(s) = true .
--   eq m1?(r3) = true .
--   eq receiver(r3) = r1 .
--   eq key(cipher1(r3)) = r1 .
--   eq principal(cipher1(r3)) = sender(r3) .
--   eq r2 \in ur(s) = false .
--   eq (r = r2) = false .
--   eq sender(r3) = intruder .
--   eq nonce(cipher1(r3)) = n(p,q,r) .
--   eq (p = intruder) = false .
--   eq n(p,q,r) \in cnonce(nw(s)) = true .
-- 	red inv210(s,p,q,r) implies inv210(sdm2(s,r1,r2,r3),p,q,r) .
-- close

-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Random .
-- 	op r3 : -> Message .
-- 	op s : -> System .
--   eq r3 \in nw(s) = true .
--   eq m1?(r3) = true .
--   eq receiver(r3) = r1 .
--   eq key(cipher1(r3)) = r1 .
--   eq principal(cipher1(r3)) = sender(r3) .
--   eq r2 \in ur(s) = false .
--   eq (r = r2) = false .
--   eq sender(r3) = intruder .
--   eq nonce(cipher1(r3)) = n(p,q,r) .
--   eq (p = intruder) = false .

--   eq r \in ur(s) = true .
-- 	red inv210(s,p,q,r) implies inv210(sdm2(s,r1,r2,r3),p,q,r) .
-- close

-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Random .
-- 	op r3 : -> Message .
-- 	op s : -> System .
--   eq r3 \in nw(s) = true .
--   eq m1?(r3) = true .
--   eq receiver(r3) = r1 .
--   eq key(cipher1(r3)) = r1 .
--   eq principal(cipher1(r3)) = sender(r3) .
--   eq r2 \in ur(s) = false .
--   eq (r = r2) = false .
--   eq sender(r3) = intruder .
--   eq nonce(cipher1(r3)) = n(p,q,r) .
--   eq (p = intruder) = false .

--   eq r \in ur(s) = false .
--   eq n(p,q,r) \in cnonce(nw(s)) = true .
-- 	red inv210(s,p,q,r) implies inv210(sdm2(s,r1,r2,r3),p,q,r) .
-- close

-- -- false
-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Random .
-- 	op r3 : -> Message .
-- 	op s : -> System .
--   eq r3 \in nw(s) = true .
--   eq m1?(r3) = true .
--   eq receiver(r3) = r1 .
--   eq key(cipher1(r3)) = r1 .
--   eq principal(cipher1(r3)) = sender(r3) .
--   eq r2 \in ur(s) = false .
--   eq (r = r2) = false .
--   eq sender(r3) = intruder .
--   eq nonce(cipher1(r3)) = n(p,q,r) .
--   eq (p = intruder) = false .

--   eq r \in ur(s) = false .
--   eq n(p,q,r) \in cnonce(nw(s)) = false .
-- 	red inv210(s,p,q,r) implies inv210(sdm2(s,r1,r2,r3),p,q,r) .
-- close

-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Random .
-- 	op r3 : -> Message .
-- 	op s : -> System .
--   eq r3 \in nw(s) = true .
--   eq m1?(r3) = true .
--   eq receiver(r3) = r1 .
--   eq key(cipher1(r3)) = r1 .
--   eq principal(cipher1(r3)) = sender(r3) .
--   eq r2 \in ur(s) = false .
--   eq (r = r2) = false .
--   eq sender(r3) = intruder .
--   eq (nonce(cipher1(r3)) = n(p,q,r)) = false .
-- 	red inv210(s,p,q,r) implies inv210(sdm2(s,r1,r2,r3),p,q,r) .
-- close

-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Random .
-- 	op r3 : -> Message .
-- 	op s : -> System .
--   eq r3 \in nw(s) = true .
--   eq m1?(r3) = true .
--   eq receiver(r3) = r1 .
--   eq key(cipher1(r3)) = r1 .
--   eq principal(cipher1(r3)) = sender(r3) .
--   eq r2 \in ur(s) = false .
--   eq (r = r2) = false .
--   eq (sender(r3) = intruder) = false .
-- 	red inv210(s,p,q,r) implies inv210(sdm2(s,r1,r2,r3),p,q,r) .
-- close

-- -- true
-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Random .
-- 	op r3 : -> Message .
-- 	op s : -> System .
--   eq r3 \in nw(s) = true .
--   eq m1?(r3) = true .
--   eq receiver(r3) = r1 .
--   eq key(cipher1(r3)) = r1 .
--   eq (principal(cipher1(r3)) = sender(r3)) = false .
-- 	red inv210(s,p,q,r) implies inv210(sdm2(s,r1,r2,r3),p,q,r) .
-- close

-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Random .
-- 	op r3 : -> Message .
-- 	op s : -> System .
--   eq r3 \in nw(s) = true .
--   eq m1?(r3) = true .
--   eq receiver(r3) = r1 .
--   eq (key(cipher1(r3)) = r1) = false .
-- 	red inv210(s,p,q,r) implies inv210(sdm2(s,r1,r2,r3),p,q,r) .
-- close

-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Random .
-- 	op r3 : -> Message .
-- 	op s : -> System .
--   eq r3 \in nw(s) = true .
--   eq m1?(r3) = true .
--   eq (receiver(r3) = r1) = false .
-- 	red inv210(s,p,q,r) implies inv210(sdm2(s,r1,r2,r3),p,q,r) .
-- close

-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Random .
-- 	op r3 : -> Message .
-- 	op s : -> System .
--   eq r3 \in nw(s) = true .
--   eq m1?(r3) = false .
-- 	red inv210(s,p,q,r) implies inv210(sdm2(s,r1,r2,r3),p,q,r) .
-- close

-- open INV .
--   -- :id(nslpk1)
--     op p : -> Principal .
--     op q : -> Principal .
--     op r : -> Random .
-- 	op r1 : -> Principal .
-- 	op r2 : -> Random .
-- 	op r3 : -> Message .
-- 	op s : -> System .
--   eq r3 \in nw(s) = false .
-- 	red inv210(s,p,q,r) implies inv210(sdm2(s,r1,r2,r3),p,q,r) .
-- close

-- sdm3
open INV .
  -- :id(nslpk1)
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq receiver(r4) = r1 .
	eq key(cipher2(r4)) = r1 .
    eq nonce1(cipher2(r4)) = n(r1,sender(r4),r2) .
	eq principal(cipher2(r4)) = sender(r4) .

    eq sender(r4) = intruder .
    eq nonce2(cipher2(r4)) = n(p,q,r) .
	eq n(p,q,r) \in cnonce(nw(s)) = true .
    eq r1 = intruder .

	red inv210(s,p,q,r) implies inv210(sdm3(s,r1,r2,r3,r4),p,q,r) .
close

open INV .
  -- :id(nslpk1)
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq receiver(r4) = r1 .
	eq key(cipher2(r4)) = r1 .
    eq nonce1(cipher2(r4)) = n(r1,sender(r4),r2) .
	eq principal(cipher2(r4)) = sender(r4) .

    eq sender(r4) = intruder .
    eq nonce2(cipher2(r4)) = n(p,q,r) .
	eq n(p,q,r) \in cnonce(nw(s)) = true .
    eq (r1 = intruder) = false .

	red inv210(s,p,q,r) implies inv210(sdm3(s,r1,r2,r3,r4),p,q,r) .
close

open INV .
  -- :id(nslpk1)
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq receiver(r4) = r1 .
	eq key(cipher2(r4)) = r1 .
    eq nonce1(cipher2(r4)) = n(r1,sender(r4),r2) .
	eq principal(cipher2(r4)) = sender(r4) .

    eq sender(r4) = intruder .
    eq nonce2(cipher2(r4)) = n(p,q,r) .
	eq n(p,q,r) \in cnonce(nw(s)) = false .

	eq r \in ur(s) = true .
	red inv210(s,p,q,r) implies inv210(sdm3(s,r1,r2,r3,r4),p,q,r) .
close

open INV .
  -- :id(nslpk1)
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq receiver(r4) = r1 .
	eq key(cipher2(r4)) = r1 .
    eq nonce1(cipher2(r4)) = n(r1,sender(r4),r2) .
	eq principal(cipher2(r4)) = sender(r4) .

    eq sender(r4) = intruder .
    eq nonce2(cipher2(r4)) = n(p,q,r) .
	eq n(p,q,r) \in cnonce(nw(s)) = false .

	eq r \in ur(s) = false .
    eq p = intruder .
	red inv210(s,p,q,r) implies inv210(sdm3(s,r1,r2,r3,r4),p,q,r) .
close

-- false
open INV .
  -- :id(nslpk1)
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq receiver(r4) = r1 .
	eq key(cipher2(r4)) = r1 .
    eq nonce1(cipher2(r4)) = n(r1,sender(r4),r2) .
	eq principal(cipher2(r4)) = sender(r4) .

    eq sender(r4) = intruder .
    eq nonce2(cipher2(r4)) = n(p,q,r) .
	eq n(p,q,r) \in cnonce(nw(s)) = false .

	eq r \in ur(s) = false .
    eq (p = intruder) = false .
	red inv210(s,p,q,r) implies inv210(sdm3(s,r1,r2,r3,r4),p,q,r) .
close

open INV .
  -- :id(nslpk1)
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq receiver(r4) = r1 .
	eq key(cipher2(r4)) = r1 .
    eq nonce1(cipher2(r4)) = n(r1,sender(r4),r2) .
	eq principal(cipher2(r4)) = sender(r4) .

    eq sender(r4) = intruder .
    eq (nonce2(cipher2(r4)) = n(p,q,r)) = false .

	red inv210(s,p,q,r) implies inv210(sdm3(s,r1,r2,r3,r4),p,q,r) .
close

open INV .
  -- :id(nslpk1)
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq receiver(r4) = r1 .
	eq key(cipher2(r4)) = r1 .
    eq nonce1(cipher2(r4)) = n(r1,sender(r4),r2) .
	eq principal(cipher2(r4)) = sender(r4) .

    eq (sender(r4) = intruder) = false .

	red inv210(s,p,q,r) implies inv210(sdm3(s,r1,r2,r3,r4),p,q,r) .
close

open INV .
  -- :id(nslpk1)
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq receiver(r4) = r1 .
	eq key(cipher2(r4)) = r1 .
    eq nonce1(cipher2(r4)) = n(r1,sender(r4),r2) .
	eq (principal(cipher2(r4)) = sender(r4)) = false .
	red inv210(s,p,q,r) implies inv210(sdm3(s,r1,r2,r3,r4),p,q,r) .
close

open INV .
  -- :id(nslpk1)
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq receiver(r4) = r1 .
	eq key(cipher2(r4)) = r1 .
    eq (nonce1(cipher2(r4)) = n(r1,sender(r4),r2)) = false .
	red inv210(s,p,q,r) implies inv210(sdm3(s,r1,r2,r3,r4),p,q,r) .
close

open INV .
  -- :id(nslpk1)
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq receiver(r4) = r1 .
	eq (key(cipher2(r4)) = r1) = false .
	red inv210(s,p,q,r) implies inv210(sdm3(s,r1,r2,r3,r4),p,q,r) .
close

open INV .
  -- :id(nslpk1)
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq principal(cipher1(r3)) = r1 .
    eq (receiver(r4) = r1) = false .
	red inv210(s,p,q,r) implies inv210(sdm3(s,r1,r2,r3,r4),p,q,r) .
close

open INV .
  -- :id(nslpk1)
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq nonce(cipher1(r3)) = n(r1,sender(r4),r2) .
	eq (principal(cipher1(r3)) = r1) = false .
	red inv210(s,p,q,r) implies inv210(sdm3(s,r1,r2,r3,r4),p,q,r) .
close

open INV .
  -- :id(nslpk1)
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
    eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq key(cipher1(r3)) = sender(r4) .
	eq (nonce(cipher1(r3)) = n(r1,sender(r4),r2)) = false .
	red inv210(s,p,q,r) implies inv210(sdm3(s,r1,r2,r3,r4),p,q,r) .
close

--> true
open INV .
  -- :id(nslpk1)
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq receiver(r3) = sender(r4) .
    eq (key(cipher1(r3)) = sender(r4)) = false .
	red inv210(s,p,q,r) implies inv210(sdm3(s,r1,r2,r3,r4),p,q,r) .
close

--> true
open INV .
  -- :id(nslpk1)
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq sender(r3) = r1 .
    eq (receiver(r3) = sender(r4)) = false .
	red inv210(s,p,q,r) implies inv210(sdm3(s,r1,r2,r3,r4),p,q,r) .
close

--> true
open INV .
  -- :id(nslpk1)
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq creator(r3) = r1 .
    eq (sender(r3) = r1) = false .
	red inv210(s,p,q,r) implies inv210(sdm3(s,r1,r2,r3,r4),p,q,r) .
close

--> true
open INV .
  -- :id(nslpk1)
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = true .
	eq (creator(r3) = r1) = false .
	red inv210(s,p,q,r) implies inv210(sdm3(s,r1,r2,r3,r4),p,q,r) .
close

--> true
open INV .
  -- :id(nslpk1)	
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = true .
	eq m2?(r4) = false .
	red inv210(s,p,q,r) implies inv210(sdm3(s,r1,r2,r3,r4),p,q,r) .
close

--> true
open INV .
  -- :id(nslpk1)
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = true .
	eq m1?(r3) = false .
	red inv210(s,p,q,r) implies inv210(sdm3(s,r1,r2,r3,r4),p,q,r) .
close

--> true
open INV .
  -- :id(nslpk1)	
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = true .
	eq (r4 \in nw(s)) = false .
	red inv210(s,p,q,r) implies inv210(sdm3(s,r1,r2,r3,r4),p,q,r) .
close

--> true
open INV .
  -- :id(nslpk1)	
    op p : -> Principal .
    op q : -> Principal .
    op r : -> Random .
	op r1 : -> Principal .
	op r2 : -> Random .
	op r3 : -> Message .
	op r4 : -> Message .
	op s : -> System .
	eq (r3 \in nw(s)) = false .
	red inv210(s,p,q,r) implies inv210(sdm3(s,r1,r2,r3,r4),p,q,r) .
close

open INV .
  :proof(nslpk1)
close