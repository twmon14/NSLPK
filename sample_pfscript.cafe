open INV .
	:goal{
		eq [inv10 :nonexec] : inv100(S:System,C:Cipher1) = true .
        eq [inv11 :nonexec] : inv110(S:System,C:Cipher2) = true .
        eq [inv12 :nonexec] : inv120(S:System,C:Cipher3) = true .
        eq [inv13 :nonexec] : inv130(S:System,N:Nonce) = true .
        eq [inv14 :nonexec] : inv140(S:System,C:Cipher1) = true .
        eq [inv15 :nonexec] : inv150(S:System,C:Cipher2) = true .
        eq [inv16 :nonexec] : inv160(S:System,N:Nonce) = true .
        eq [inv17 :nonexec] : inv170(S:System,P:Principal,P1:Principal,P0:Principal,R:Random,N:Nonce) = true .
        eq [inv18 :nonexec] : inv180(S:System,P:Principal,P1:Principal,P0:Principal,R:Random,N:Nonce) = true .
        eq [inv19 :nonexec] : inv190(S:System,P:Principal,P0:Principal,R:Random,N:Nonce) = true .
        eq [inv20 :nonexec] : inv200(S:System,P:Principal,P0:Principal,R:Random) = true .
        eq [inv21 :nonexec] : inv210(S:System,P:Principal,P0:Principal,R:Random) = true .
        eq [inv22 :nonexec] : inv220(S:System,P:Principal,P0:Principal,R:Random,N:Nonce) = true .
        eq [inv23 :nonexec] : inv230(S:System,P:Principal,P0:Principal,R:Random) = true .
        eq [inv24 :nonexec] : inv240(S:System,P:Principal,P0:Principal,R:Random) = true .
        eq [inv25 :nonexec] : inv250(S:System,P:Principal,P1:Principal,P0:Principal,R:Random,N:Nonce) = true .
        eq [inv26 :nonexec] : inv260(S:System,P:Principal,P0:Principal,N:Nonce,N0:Nonce) = true .
	}

	:ind on (S:System)
    
	:apply(si)

-- fkm11
    :apply(tc)
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .   
    
-- fkm12
    :apply(tc)
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .  

-- fkm21
    :apply(tc)
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .   
     
-- fkm22
    :apply(tc)
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .    

-- fkm31
    :apply(tc)
    :postpone .    
    :postpone .    
    :postpone .    
    :postpone .    
    :postpone .    
    :postpone .    
    :postpone .    
    :postpone .    
    :postpone .    
    :postpone .    
    :postpone .    
    :postpone .    
    :postpone .    
    :postpone .    
    :postpone .    
    :postpone .    
    :postpone .    

-- fkm32
    :apply(tc)
    :postpone .    
    :postpone .    
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .

-- init
    :apply(tc)
    :apply (rd)
	:apply (rd)
	:apply (rd)
	:apply (rd)
	:apply (rd)
	:apply (rd)
	:apply (rd)
	:apply (rd)
	:apply (rd)
	:apply (rd)
	:apply (rd)
	:apply (rd)
	:apply (rd)
	:apply (rd)
	:apply (rd)
	:apply (rd)
	:apply (rd)
  
-- sdm1
    :apply(tc)
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .

-- sdm2
    :apply(tc)
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone .
    :postpone . -- i17
    :postpone . 
    :postpone . 
    :postpone . 
    :postpone . 
    :postpone . 
    :postpone . 
    :postpone . 
    :postpone . 
    :postpone . 

-- sdm3
    :apply(tc)
    :postpone . 
    :postpone . 
    :postpone . 
    :postpone . 
    :postpone . 
    :postpone . 
    :postpone . 
    :postpone . 
    :postpone . 
    :postpone . 
    :postpone . 
    :postpone . 
    :postpone . 
    :postpone . 
    :postpone . 
    :postpone . 
    :postpone . 
    
close